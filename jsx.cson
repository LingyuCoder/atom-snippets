'.source.jsx':
  'this.state.$1':
    'prefix': 'sta',
    'body': 'this.state.$1'
  'this.props.$1':
    'prefix': 'prop',
    'body': 'this.props.$1'
  'this.setState($1)':
    'prefix': 'ssta',
    'body': 'this.setState($1)'
  'componentWillMount':
    'prefix': 'cwm'
    'body': """
    componentWillMount() {
      $1
    }
    """
  'componentDidMount':
    'prefix': 'cdm'
    'body': """
    componentDidMount() {
      $1
    }
    """
  'componentWillReceiveProps':
    'prefix': 'cwrp'
    'body': """
    componentWillReceiveProps() {
      $1
    }
    """
  'shouldComponentUpdate':
    'prefix': 'scu'
    'body': """
    shouldComponentUpdate() {
      $1
    }
    """
  'componentWillUpdate':
    'prefix': 'cwu'
    'body': """
    componentWillUpdate() {
      $1
    }
    """
  'componentDidUpdate':
    'prefix': 'cdu'
    'body': """
    componentDidUpdate() {
      $1
    }
    """
  'componentWillUnmount':
    'prefix': 'cdun'
    'body': """
    componentWillUnmount() {
      $1
    }
    """
  'const React = require()':
    'prefix': 'reqr'
    'body': 'const React = require(\'$1\')'
  'const ReactDOM = require()':
    'prefix': 'reqrd'
    'body': 'const ReactDOM = require(\'$1\')'
  'type-description':
    'prefix': 'td'
    'body': """
    /**
     * $1
     */
    """
  'this.funcname = this.funcname.bind(this);':
    'prefix': 'bind'
    'body': 'this.${1:name} = this.${1:name}.bind(this);'
  'react-es6-class':
    'prefix': 'class6'
    'body': """
    class ${1:name} extends React.Component {
      constructor() {
        super();
      }
      render() {
        $2
      }
    }
    ${1:name}.displayName = '${1:name}';
    ${1:name}.propTypes = {};
    ${1:name}.defaultProps = {};
    module.exports = ${1:name};
    """
  'react-es5-class':
    'prefix': 'class5'
    'body': """
    var ${1:name} = React.createClass({
      displayName: '${1:name}',
      propTypes: {},
      defaultProps: {},
      render: function() {
        return (${2});
      }
    });
    module.exports = ${1:name};
    """
  'innerhtml':
    'prefix': 'innerhtml'
    'body': 'dangerouslySetInnerHTML={{__html: $1}}'
  'React.Proptypes.string':
    'prefix': 'ts'
    'body': 'React.PropTypes.string'
  'React.Proptypes.number':
    'prefix': 'tn'
    'body': 'React.PropTypes.number'
  'React.Proptypes.object':
    'prefix': 'to'
    'body': 'React.PropTypes.object'
  'React.Proptypes.bool':
    'prefix': 'tb'
    'body': 'React.PropTypes.bool'
  'React.Proptypes.func':
    'prefix': 'tf'
    'body': 'React.PropTypes.func'
  'React.Proptypes.array':
    'prefix': 'ta'
    'body': 'React.PropTypes.array'
  'React.Proptypes.shape':
    'prefix': 'tsh'
    'body': """
    React.PropTypes.shape({
      $1
    })
    """
  'React.Proptypes.any':
    'prefix': 'tany'
    'body': 'React.PropTypes.any'
  'React.Proptypes.arrayOf':
    'prefix': 'taf'
    'body': 'React.PropTypes.arrayOf($1)'
  'React.Proptypes.node':
    'prefix': 'tno'
    'body': 'React.PropTypes.node'
  'React.Proptypes.element':
    'prefix': 'te'
    'body': 'React.PropTypes.element'
  'React.Proptypes.oneOf':
    'prefix': 'tof'
    'body': 'React.PropTypes.oneOf([$1])'
  'React.Proptypes.oneOfType':
    'prefix': 'toft'
    'body': 'React.PropTypes.oneOfType([$1])'
  'React.Proptypes.instanceOf':
    'prefix': 'ti'
    'body': 'React.PropTypes.instanceOf($1)'
